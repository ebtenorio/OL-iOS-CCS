// This file has been autogenerated from a class added in the UI designer.

using System;
using System.Collections.Generic;
using System.Linq;

using Foundation;
using UIKit;
using OneTradeCentral.DTOs;

namespace OneTradeCentral.iOS
{
	public partial class StoreProviderController : UIViewController
	{

		static IList<Provider> providerList;

		private Provider _selectedProvider;

		public StoreListingsController storeListingController { get; set; }

		public StoreListingsSource storeListingsSource { get; set; }

		public StoreProviderController  (IntPtr handle) : base (handle)
		{
		
		}

		public override void ViewWillDisappear (bool animated)
		{
			base.ViewWillDisappear (animated);
			if (providerList.Count > 0) {
				_selectedProvider = providerList.Where (p => p.ID == this.storeListingController.ProviderID).First ();
				this.storeListingsSource = new StoreListingsSource (storeListingController, _selectedProvider.ID);
				this.storeListingController.TableView.ReloadData ();
			}
		}

		public override void ViewDidLoad ()
		{
			base.ViewDidLoad (); 
			DALFacade dalFacade = new DALFacade ();
			providerList = dalFacade.getDistinctProviderList ();

			if (providerList.Count > 0) {
				StoreProviderPicker.Model = new StoreProviderPickerModel (storeListingController);
				_selectedProvider = providerList.Where (p => p.ID == this.storeListingController.ProviderID).First ();
			}

		}

		public override void ViewDidAppear (bool animated)
		{
			base.ViewDidAppear (animated);

			if (providerList.Count > 0) {

				var providerIndex = providerList.IndexOf (_selectedProvider);
				storeListingController.StoreProvider.Text = _selectedProvider.Name;
				StoreProviderPicker.Select (providerIndex, 0, false);

			}


		}

	

		public class StoreProviderPickerModel: UIPickerViewModel {

			public StoreListingsController _storeListingsController;

			public StoreProviderPickerModel(StoreListingsController storeListingsCntroller) {
			
				this._storeListingsController = storeListingsCntroller;
			}

			public override nint GetComponentCount (UIPickerView picker)
			{
				return 1;
			}

			public override nint GetRowsInComponent (UIPickerView picker, nint component)
			{
				return providerList.Count;
			}

			public override void Selected (UIPickerView picker, nint row, nint component)
			{
				this._storeListingsController.ProviderID = providerList [(int)row].ID;
				this._storeListingsController.StoreProvider.Text = providerList [(int)row].Name;
			}

			public override string GetTitle (UIPickerView picker, nint row, nint component)
			{
				return providerList [(int)row].Name;
			}
		}

	}





}
