// This file has been autogenerated from a class added in the UI designer.

using System;
using System.Collections.Generic;
using System.Linq;

using Foundation;
using UIKit;
using OneTradeCentral.DTOs;

namespace OneTradeCentral.iOS
{
	public partial class ProductsProviderController : UIViewController
	{

		static IList<Provider> providerList;

		private Provider _selectedProvider;

		public ProductsListingsController productsListingController { get; set; }

		public ProductListSource productsListingsSource { get; set; }

		public ProductsProviderController  (IntPtr handle) : base (handle)
		{

		}

		public override void ViewWillDisappear (bool animated)
		{
			base.ViewWillDisappear (animated);

			if (providerList.Count > 0) {
				_selectedProvider = providerList.Where (p => p.ID == this.productsListingController.ProviderID).First ();
				this.productsListingController.RefreshProductList (_selectedProvider.ID);
				this.productsListingController.TableView.ReloadData ();
			}
		}

		public override void ViewDidLoad ()
		{
			base.ViewDidLoad (); 

			DALFacade dalFacade = new DALFacade ();
			providerList = dalFacade.getDistinctProviderList ();
			this.ProductsProviderPicker.Model = new ProductsProviderPickerModel (productsListingController);

			if (providerList.Count > 0) {

				_selectedProvider = providerList.Where (p => p.ID == this.productsListingController.ProviderID).First ();
			}
		}

		public override void ViewDidAppear (bool animated)
		{
			base.ViewDidAppear (animated);


			// if selected:

			if (providerList.Count > 0) {
				var providerIndex = providerList.IndexOf (_selectedProvider);
				productsListingController.ProductProvider.Text = _selectedProvider.Name;
				this.ProductsProviderPicker.Select (providerIndex, 0, false);
				this.productsListingsSource = new ProductListSource (); //(productsListingController, selectedProvider.ID);
				this.productsListingController.TableView.ReloadData ();
			}



		}

		public class ProductsProviderPickerModel: UIPickerViewModel {

			public ProductsListingsController _productsListingsController;

			public ProductsProviderPickerModel(ProductsListingsController productsListingsCntroller) {

				this._productsListingsController = productsListingsCntroller;
			}

			public override nint GetComponentCount (UIPickerView picker)
			{
				return 1;
			}

			public override nint GetRowsInComponent (UIPickerView picker, nint component)
			{
				return providerList.Count;
			}

			public override void Selected (UIPickerView picker, nint row, nint component)
			{
				_productsListingsController.ProductProvider.Text = providerList [(int)row].Name;
				_productsListingsController.ProviderID = providerList [(int)row].ID;
				//this._productsListingsController.RefreshProductList (providerList [row].ID);


			}

			public override string GetTitle (UIPickerView picker, nint row, nint component)
			{
				return providerList [(int)row].Name;
			}
		}

	}





}
