// This file has been autogenerated from a class added in the UI designer.

using System;
using System.Collections.Generic;
using System.Linq;

using Foundation;
using UIKit;

using OneTradeCentral.DTOs;

namespace OneTradeCentral.iOS
{
	public partial class ProviderController : UIViewController
	{
		static IList<Provider> providerList;
		public OrderViewController OrderController { get; set; }

		public ProviderController (IntPtr handle) : base (handle)
		{
		}

		public override void ViewDidLoad ()
		{
			base.ViewDidLoad (); 
			DALFacade dalFacade = new DALFacade ();

			// PROVIDER LIST TEST
			providerList = dalFacade.getProviderListByCustomerIDFiltered (OrderController.CustomerID);
			ProviderPicker.Model = new ProviderPickerModel (OrderController);
		}

		public override void ViewDidAppear (bool animated)
		{
			base.ViewDidAppear (animated);
			if (providerList != null && providerList.Count > 0) {
				if (OrderController.ProviderID > 0) {
					var selectedProvider = providerList.Where (p => p.ID == OrderController.ProviderID).First ();
					var providerIndex = providerList.IndexOf (selectedProvider);
					ProviderPicker.Select (providerIndex, 0, false);
				} else {
					OrderController.SelectProvider (providerList [0]);
				}
			}
		}

		public class ProviderPickerModel: UIPickerViewModel {
			public OrderViewController _orderViewController;

			public ProviderPickerModel(OrderViewController orderViewController) {
				this._orderViewController = orderViewController;
			}

			public override nint GetComponentCount (UIPickerView picker)
			{
				return 1;
			}

			public override nint GetRowsInComponent (UIPickerView picker, nint component)
			{
				return providerList.Count;
			}

			public override void Selected (UIPickerView picker, nint row, nint component)
			{
				this._orderViewController.SelectProvider (providerList[(int)row]);
			}

			public override string GetTitle (UIPickerView picker, nint row, nint component)
			{
				return providerList [(int)row].Name;
			}
		}
	}
}
