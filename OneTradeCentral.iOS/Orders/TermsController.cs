// This file has been autogenerated from parsing an Objective-C header file added in Xcode.

using System;
using System.Collections.Generic;

using Foundation;
using UIKit;

using OneTradeCentral.DTOs;

namespace OneTradeCentral.iOS
{
	public partial class TermsController : UITableViewController
	{
		public OrderViewController OrderController { get; set; }
		
		static PaymentTerms selectedTerms { get; set; }
		
		static IList<PaymentTerms> termsList = null;

		public TermsController (IntPtr handle) : base (handle)
		{
		}

		public override void ViewDidLoad ()
		{
			base.ViewDidLoad ();
			
			DALFacade dalFacade = new DALFacade();
			termsList = dalFacade.getPaymentTermsList();
			TableView.Source = new TermsViewSource ();
//			TermsPicker.Model = new TermsPickerModel();
		}

		partial void Save (Foundation.NSObject sender) {
			// Fix for #60.  Remove Required Date and Payment Terms, not needed by Wrigley's
//			OrderController.setTerms(selectedTerms);
			NavigationController.PopViewController(true);
		}

		public class TermsViewSource : UITableViewSource {

			public override nint NumberOfSections (UITableView tableView)
			{
				return 1;
			}

			public override nint RowsInSection (UITableView tableView, nint section)
			{
				return termsList.Count;
			}

			public override void RowSelected (UITableView tableView, NSIndexPath indexPath) {
				selectedTerms = termsList [indexPath.Row];
			}

			public override UITableViewCell GetCell (UITableView tableView, NSIndexPath indexPath)
			{
				NSString cellID = new NSString ("TermsCell");
				UITableViewCell cell = (UITableViewCell)tableView.DequeueReusableCell (cellID, indexPath);
				if (cell == null) {
					cell = new UITableViewCell ();
				}

				cell.TextLabel.Text = termsList[indexPath.Row].Title;
				return cell;
			}
		}
		
		
		public class TermsPickerModel : UIPickerViewModel {
			
			public TermsPickerModel() {
			}
			
			
			public override nint GetComponentCount (UIPickerView picker)
			{
				return 1;
			}
			
			public override nint GetRowsInComponent (UIPickerView picker, nint component)
			{
				return termsList.Count;
			}
			
			public override void Selected (UIPickerView picker, nint row, nint component)
			{
				selectedTerms = termsList[(int)row];
			}
			
			public override string GetTitle (UIPickerView picker, nint row, nint component)
			{
				return termsList[(int)row].Title;
			}
		}
	}
}
