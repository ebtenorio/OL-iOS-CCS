// This file has been autogenerated from parsing an Objective-C header file added in Xcode.

using System;
using System.Linq;

using AddressBook;
using Foundation;
using UIKit;

namespace OneTradeCentral.iOS
{
	public partial class ContactListController : UITableViewController
	{
		private ContactSource _contactSource;

		public ContactListController (IntPtr handle) : base (handle)
		{
		}

		public override void ViewDidLoad ()
		{
			base.ViewDidLoad ();
			TableView.Source = _contactSource = new ContactSource (this); 
			SearchBar.TextChanged += (object sender, UISearchBarTextChangedEventArgs e) => {
				_contactSource.SearchString = SearchBar.Text;
				TableView.ReloadData();
			};
		}

		public void SetContact(ABPerson contact) {
			var parentController = this.ParentViewController as ContactSelectionController;
			var firstname = contact.FirstName;
			var lastname = contact.LastName;
			var email = ContactUtility.getEmailEntry (contact);
			var phone = ContactUtility.getPhoneEntry (contact);
			parentController.OrderViewController.SetStoreMgrFields (firstname, lastname, email, phone);
		}

		partial void dismiss (Foundation.NSObject sender) {
			DismissViewController(true, null);
		}

		public class ContactSource : UITableViewSource {
			ContactListController _controller;
			static readonly NSString _cellID = new NSString ("ContactTableCell");
			public string SearchString { get; set; }
			ABAddressBook addressBook;
			ABPerson[] people;

			public ContactSource(ContactListController controller) {
				_controller = controller;
				NSError error;
				addressBook = ABAddressBook.Create(out error);
				if (error == null)
					people = addressBook.GetPeople();
			}

			private ABPerson[] ContactList {
				get {
					if (SearchString == null || SearchString.Trim ().Length <= 0)
						return people;
					else
						return addressBook.GetPeopleWithName (SearchString);
				}
			}

			public override nint NumberOfSections (UITableView tableView)
			{
				return 1;
			}

			public override nint RowsInSection (UITableView tableview, nint section)
			{
				if (people != null)
					return ContactList.Length;
				else
					return 0;
			}

			public override UITableViewCell GetCell (UITableView tableView, NSIndexPath indexPath)
			{
				var cell = (UITableViewCell)tableView.DequeueReusableCell (_cellID, indexPath);
				var contact = ContactList [indexPath.Row];

				if (contact.FirstName != null && contact.FirstName.Trim ().Length > 0 && 
				    contact.LastName != null && contact.LastName.Trim().Length > 0)
					cell.TextLabel.Text = contact.FirstName + " " + contact.LastName;
				else {
					cell.TextLabel.Text = contact.Organization;
				}

				var emailEntry = ContactUtility.getEmailEntry (contact);
				var phoneEntry = ContactUtility.getPhoneEntry (contact);
				cell.DetailTextLabel.Text = emailEntry + " " + phoneEntry;
				return cell;
			}

			public override void RowSelected (UITableView tableView, NSIndexPath indexPath)
			{
				var person = ContactList [indexPath.Row];
				_controller.SetContact (person);
			}
		}
	}
}
